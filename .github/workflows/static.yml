name: Deploy

on:
  push:
    branches: ["master"]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write        # Grants write access necessary for deployment
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# Do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Verify filter.txt Exists
      - name: Verify filter.txt Exists
        run: |
          if [ -f filter.txt ]; then
            echo "filter.txt found."
          else
            echo "filter.txt not found!"
            exit 1
          fi

      # Step 3: Rename and Move filter.txt to public/index.html
      - name: Rename and Move filter.txt to public/index.html
        run: |
          mkdir -p public
          mv filter.txt public/index.html
          echo "Moved filter.txt to public/index.html"

      # Step 4: Verify index.html Exists in public
      - name: Verify index.html Exists in public
        run: |
          if [ -f public/index.html ]; then
            echo "public/index.html successfully created."
          else
            echo "public/index.html not found after renaming!"
            exit 1
          fi

      # Step 5: List Files in public (Optional, for debugging)
      - name: List Files in public
        run: ls -la public

      # Step 6: Setup Pages
      - name: Setup Pages
        uses: actions/configure-pages@v4

      # Step 7: Upload Pages Artifact
      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './public'   # Uploading the 'public' directory containing index.html

      # Step 8: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
